#include <Windows.h>
#include <d3dx9.h>
#include <d3d9.h>
 
const int ES = 0;
const int DIP = 1;
const int SSS = 2;
 
ID3DXFont* dx_Font = NULL;
 
//Credits to Drunken Cheetah
LRESULT CALLBACK MsgProc(HWND hwnd,UINT uMsg,WPARAM wParam,LPARAM lParam){return DefWindowProc(hwnd, uMsg, wParam, lParam);} 
void DX_Init(DWORD* table)
{
    WNDCLASSEX wc = {sizeof(WNDCLASSEX),CS_CLASSDC,MsgProc,0L,0L,GetModuleHandle(NULL),NULL,NULL,NULL,NULL,"DX",NULL};
    RegisterClassEx(&wc);
    HWND hWnd = CreateWindow("DX",NULL,WS_OVERLAPPEDWINDOW,100,100,300,300,GetDesktopWindow(),NULL,wc.hInstance,NULL);
    LPDIRECT3D9 pD3D = Direct3DCreate9( D3D_SDK_VERSION );
    D3DPRESENT_PARAMETERS d3dpp; 
    ZeroMemory( &d3dpp, sizeof(d3dpp) );
    d3dpp.Windowed = TRUE;
    d3dpp.SwapEffect = D3DSWAPEFFECT_DISCARD;
    d3dpp.BackBufferFormat = D3DFMT_UNKNOWN;
    LPDIRECT3DDEVICE9 pd3dDevice;
    pD3D->CreateDevice(D3DADAPTER_DEFAULT,D3DDEVTYPE_HAL,hWnd,D3DCREATE_SOFTWARE_VERTEXPROCESSING,&d3dpp,&pd3dDevice);
    
	DWORD* pVTable = (DWORD*)pd3dDevice;
    pVTable = (DWORD*)pVTable[0];
    table[ES]   = pVTable[42];
    table[DIP]  = pVTable[82];
    table[SSS]  = pVTable[100];
 
    DestroyWindow(hWnd);
}
 
void DrawFilledBox(ID3DXLine* pLine, int x, int y, int w, int h, int r, int g, int b, int a) 
{ 
    D3DXVECTOR2 vLine[2]; 
 
    pLine->SetWidth( w ); 
    pLine->SetAntialias( false ); 
    pLine->SetGLLines( true ); 
      
    vLine[0].x = x + w/2; 
    vLine[0].y = y; 
    vLine[1].x = x + w/2; 
    vLine[1].y = y + h; 
 
    pLine->Begin( ); 
    pLine->Draw( vLine, 2, D3DCOLOR_RGBA( r, g, b, a ) ); 
    pLine->End( ); 
} 
 
void DrawLine(ID3DXLine* pLine, float StartX, float StartY, float EndX, float EndY, int w, int r, int g, int b, int a) 
{
      
 
    D3DXVECTOR2 vLine[2]; 
 
    pLine->SetWidth( w ); 
    pLine->SetAntialias( false ); 
    pLine->SetGLLines( true ); 
      
    vLine[0].x = StartX; 
    vLine[0].y = StartY; 
    vLine[1].x = EndX; 
    vLine[1].y = EndY; 
 
    pLine->Begin( ); 
    pLine->Draw( vLine, 2, D3DCOLOR_RGBA( r, g, b, a ) ); 
    pLine->End( ); 
}
 
void DrawBox(ID3DXLine* pLine, int x, int y, int width, int height, int px, int r, int g, int b, int a) 
{ 
    DrawFilledBox(pLine, x,y+height,width,px,r,g,b,a); 
    DrawFilledBox(pLine, x-px,y,px,height,r,g,b,a); 
    DrawFilledBox(pLine, x,y-px,width,px,r,g,b,a); 
    DrawFilledBox(pLine, x+width,y,px,height,r,g,b,a); 
}
 
void DrawString(int x, int y, DWORD color, const char *fmt, ...)
{
    RECT FontPos = { x, y, x + 120, y + 16 };
    char buf[1024] = {'\0'};
    va_list va_alist;
 
    va_start(va_alist, fmt);
    vsprintf(buf, fmt, va_alist);
    va_end(va_alist);
     
    dx_Font->DrawText(NULL, buf, -1, &FontPos, DT_NOCLIP, color);
}
 
const BYTE bPink[] =
{
0x89,0x50,0x4E,0x47,0xD,0xA,0x1A,0xA,0x0,0x0,
0x0,0xD,0x49,0x48,0x44,0x52,0x0,0x0,0x0,0x1,
0x0,0x0,0x0,0x1,0x8,0x2,0x0,0x0,0x0,0x90,
0x77,0x53,0xDE,0x0,0x0,0x0,0x1,0x73,0x52,0x47,
0x42,0x0,0xAE,0xCE,0x1C,0xE9,0x0,0x0,0x0,0x4,
0x67,0x41,0x4D,0x41,0x0,0x0,0xB1,0x8F,0xB,0xFC,
0x61,0x5,0x0,0x0,0x0,0x9,0x70,0x48,0x59,0x73,
0x0,0x0,0xE,0xC3,0x0,0x0,0xE,0xC3,0x1,0xC7,
0x6F,0xA8,0x64,0x0,0x0,0x0,0xC,0x49,0x44,0x41,
0x54,0x18,0x57,0x63,0xF8,0xC7,0xFE,0xF,0x0,0x4,
0xA,0x2,0x4,0x4,0x9,0x62,0x3E,0x0,0x0,0x0,
0x0,0x49,0x45,0x4E,0x44,0xAE,0x42,0x60,0x82
};
 
const BYTE bRed[] =
{
0x42, 0x4D, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x36, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01,
0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x12, 0x0B, 0x00, 0x00, 0x12, 0x0B, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0xFF, 0x00, 0x00, 0x50};
 
const BYTE bGreen[] =
{
0x89,0x50,0x4E,0x47,0xD,0xA,0x1A,0xA,0x0,0x0,
0x0,0xD,0x49,0x48,0x44,0x52,0x0,0x0,0x0,0x1,
0x0,0x0,0x0,0x1,0x8,0x2,0x0,0x0,0x0,0x90,
0x77,0x53,0xDE,0x0,0x0,0x0,0x1,0x73,0x52,0x47,
0x42,0x0,0xAE,0xCE,0x1C,0xE9,0x0,0x0,0x0,0x4,
0x67,0x41,0x4D,0x41,0x0,0x0,0xB1,0x8F,0xB,0xFC,
0x61,0x5,0x0,0x0,0x0,0x9,0x70,0x48,0x59,0x73,
0x0,0x0,0xE,0xC3,0x0,0x0,0xE,0xC3,0x1,0xC7,
0x6F,0xA8,0x64,0x0,0x0,0x0,0xC,0x49,0x44,0x41,
0x54,0x18,0x57,0x63,0x10,0xF9,0xC0,0xF,0x0,0x2,
0x2F,0x1,0x14,0xC0,0x8B,0x46,0xFD,0x0,0x0,0x0,
0x0,0x49,0x45,0x4E,0x44,0xAE,0x42,0x60,0x82
};
 
const BYTE bBlue[60] =
{ 
0x42, 0x4D, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x36, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01,
0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x12, 0x0B, 0x00, 0x00, 0x12, 0x0B, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0xFF, 0x00, 0x00, 0x00, 0x00, 0x00
};
 
const BYTE bWhite[] =
{
0x89,0x50,0x4E,0x47,0xD,0xA,0x1A,0xA,0x0,0x0,
0x0,0xD,0x49,0x48,0x44,0x52,0x0,0x0,0x0,0x1,
0x0,0x0,0x0,0x1,0x8,0x2,0x0,0x0,0x0,0x90,
0x77,0x53,0xDE,0x0,0x0,0x0,0x1,0x73,0x52,0x47,
0x42,0x0,0xAE,0xCE,0x1C,0xE9,0x0,0x0,0x0,0x4,
0x67,0x41,0x4D,0x41,0x0,0x0,0xB1,0x8F,0xB,0xFC,
0x61,0x5,0x0,0x0,0x0,0x9,0x70,0x48,0x59,0x73,
0x0,0x0,0xE,0xC3,0x0,0x0,0xE,0xC3,0x1,0xC7,
0x6F,0xA8,0x64,0x0,0x0,0x0,0xC,0x49,0x44,0x41,
0x54,0x18,0x57,0x63,0xF8,0xFF,0xFF,0x3F,0x0,0x5,
0xFE,0x2,0xFE,0xA7,0x35,0x81,0x84,0x0,0x0,0x0,
0x0,0x49,0x45,0x4E,0x44,0xAE,0x42,0x60,0x82
};
 
const BYTE bOrange[] =
{
0x89,0x50,0x4E,0x47,0xD,0xA,0x1A,0xA,0x0,0x0,
0x0,0xD,0x49,0x48,0x44,0x52,0x0,0x0,0x0,0x1,
0x0,0x0,0x0,0x1,0x8,0x2,0x0,0x0,0x0,0x90,
0x77,0x53,0xDE,0x0,0x0,0x0,0x1,0x73,0x52,0x47,
0x42,0x0,0xAE,0xCE,0x1C,0xE9,0x0,0x0,0x0,0x4,
0x67,0x41,0x4D,0x41,0x0,0x0,0xB1,0x8F,0xB,0xFC,
0x61,0x5,0x0,0x0,0x0,0x9,0x70,0x48,0x59,0x73,
0x0,0x0,0xE,0xC3,0x0,0x0,0xE,0xC3,0x1,0xC7,
0x6F,0xA8,0x64,0x0,0x0,0x0,0xC,0x49,0x44,0x41,
0x54,0x18,0x57,0x63,0xF8,0x3F,0x99,0x1,0x0,0x4,
0x27,0x1,0x93,0x29,0x4F,0xFE,0x4D,0x0,0x0,0x0,
0x0,0x49,0x45,0x4E,0x44,0xAE,0x42,0x60,0x82
};
 
const BYTE bPurple[] =
{
0x89,0x50,0x4E,0x47,0xD,0xA,0x1A,0xA,0x0,0x0,
0x0,0xD,0x49,0x48,0x44,0x52,0x0,0x0,0x0,0x1,
0x0,0x0,0x0,0x1,0x8,0x2,0x0,0x0,0x0,0x90,
0x77,0x53,0xDE,0x0,0x0,0x0,0x1,0x73,0x52,0x47,
0x42,0x0,0xAE,0xCE,0x1C,0xE9,0x0,0x0,0x0,0x4,
0x67,0x41,0x4D,0x41,0x0,0x0,0xB1,0x8F,0xB,0xFC,
0x61,0x5,0x0,0x0,0x0,0x9,0x70,0x48,0x59,0x73,
0x0,0x0,0xE,0xC3,0x0,0x0,0xE,0xC3,0x1,0xC7,
0x6F,0xA8,0x64,0x0,0x0,0x0,0xC,0x49,0x44,0x41,
0x54,0x18,0x57,0x63,0x68,0x68,0xF8,0xF,0x0,0x3,
0x83,0x2,0x0,0xAA,0x7F,0x3C,0xB5,0x0,0x0,0x0,
0x0,0x49,0x45,0x4E,0x44,0xAE,0x42,0x60,0x82
};